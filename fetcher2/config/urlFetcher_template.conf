;----------------------------------------------------------
; Configures the settings for ad hoc logging
;
;  LOGPATH              : where to put the logfile
;  LOGFILE    	 		: filename for logfile
;  LOGTIMEFORMAT   	 	: format for the timestamp in the log
;  LOGFORMAT            : format for the log line
;  LOGNAME              : name of the log

[logging]
logPath = ../logs/
logFileName = urlFetcher.log
logTimeFormat = %Y-%m-%d %H:%M:%S
logFormat = %(asctime)s %(levelname)s %(message)s
logName = urlFetcher
;----------------------------------------------------------


;----------------------------------------------------------
; Configures the settings for fetching files
;
;  URL                  : top level url to fetch
;  APIKEYS              : Pipe delimited set of <key, value> tuples
;  LOGIN   	 	        : Login for authentication
;  PASSWORD   	 	    : Password for authentication
;  FILELOCATION   	 	: destination for fetched files
;  STARTOFFSET          : Default starting offset (hours)
;  ENDOFFSET          : Default ending offset (hours)

[fetch]
url = <url goes here>
apiKeys = <api keys goes here>
login = <login goes here>
password = <password goes here>
fileLocation = ../data/
retries = 5
startoffset = -26
endoffset = -2
;----------------------------------------------------------

;----------------------------------------------------------
; Configures the queues 
;

[sqs]
useSQS = Y
queueForURLs = <sqs queue name>
queueForMetrics = <sqs queue name>
;----------------------------------------------------------



